#:kivy 1.9.0

#:import random random

#:import direction direction

<HotrodGame>
    play_area: play_area_id
    player: player_beetle_id

    PlayArea:
        level: level_id
        player: player_beetle_id

        id: play_area_id
        padding: (self.parent.width - self.parent.height) / 2

        size: self.parent.height, self.parent.height
        pos: (self.padding, 0)

        PlayerBeetle:
            id: player_beetle_id

        Level:
            id: level_id
            size: self.parent.height, self.parent.width
            pos: (self.padding, 0)

            padding: self.parent.padding

            cell_size: (self.height/self.rows, self.height/self.rows)
            # Initialise 2-dimensional list of correct size
            cells: [[None for i in range(self.rows)] for i in range(self.columns)]

    Label:
        font_size: 70
        center_x: root.width / 10
        top: root.top
        text: "Oh no"


<Cell>
    left_edge: left_edge_id
    right_edge: right_edge_id
    bottom_edge: bottom_edge_id
    top_edge: top_edge_id

    interior: (self.width - self.width * self.wall_thickness * 2, self.height - self.height * self.wall_thickness * 2)
    edges: [self.left_edge, self.bottom_edge, self.right_edge, self.top_edge]

    CellEdge:
        id: left_edge_id
        direction: direction.Direction.left

    CellEdge:
        id: bottom_edge_id
        direction: direction.Direction.down

    CellEdge:
        id: right_edge_id
        direction: direction.Direction.right

    CellEdge:
        id: top_edge_id
        direction: direction.Direction.up


<PlayerBeetle>
    canvas:
        Color:
            rgb: self.color
        Ellipse:
            pos: self.pos
            size: self.size


<CellEdge>
    height: self.parent.height + (2 * self.parent.height * self.parent.wall_thickness)
    width: self.parent.width * self.parent.wall_thickness
    pos: (self.parent.pos[0], self.parent.pos[1] - self.parent.height * self.parent.wall_thickness)


<Wall>:
    canvas:
        Color:
            rgb: (0, 0, 0.5)
        PushMatrix
        Rotate:
            angle: self.angle
            origin: self.origin
        Rectangle:
            pos: self.pos
            size: self.size
        PopMatrix
